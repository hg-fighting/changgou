spring:
  application:
    name: gateway-web
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]': #匹配所有请求
            allowedOrigins: "*" #跨域处理 允许所有的域
            allowedMethods: #支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      routes:
           #唯一标志符
           - id: changgou_goods_route
             #用户请求需要路由到该服务（指定要路由的服务）
             #lb:使用LoadBalancerClient实现负载均衡，后面goods是微服务的名称(主要应用于集群环境)
             #uri: http://localhost:18081
             uri: lb://goods
             #路由断言，路由规则设置
             predicates:
             #用户请求的域名规则配置，所有以cloud.itheima.com的请求都将被路由http://localhost:18081
             #- Host=cloud.itheima.com**
             #所有以/brand开始的请求，都路由http://localhost:18081微服务
             #- Path=/brand/**
             #- Path=/api/brand/**
             - Path=/**
             #所有以/api/brand的请求，都被路由http://localhost:18081微服务
             #希望该路径由微服务网关自动给我们添加上/api前缀，每次请求真实微服务网关的时候，需要使用微服务网关将/api去掉
             filters:
             #将请求路径中的第1个路径去掉，请求路径以/区分，一个/代表一个路径
             - StringPrefix=1
             #用户请求/**->/brand/**,并且将该请求路由到http://localhost:18081微服务
             #- PrefixPath=/brand
             - name: RequestRateLimiter # 请求数限流，名字不能随便写，使用默认的facatory
               args:
                 key-resolver: "#{@ipKeyResolver}"
                 #每秒钟只允许有1个请求
                 redis-rate-limiter.replenishRate: 1
                 #允许并发有4个请求[宽限的个数]
                 redis-rate-limiter.burstCapacity: 1
server:
  port: 8001
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true
management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true